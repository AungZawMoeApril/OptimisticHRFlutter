// Mocks generated by Mockito 5.4.5 from annotations
// in h_r_optimistic_mobile/test/features/overtime/presentation/viewmodels/overtime_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter/material.dart' as _i5;
import 'package:h_r_optimistic_mobile/features/overtime/domain/entities/overtime_entities.dart'
    as _i2;
import 'package:h_r_optimistic_mobile/features/overtime/domain/repositories/overtime_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeOvertimeRequest_0 extends _i1.SmartFake
    implements _i2.OvertimeRequest {
  _FakeOvertimeRequest_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOvertimeStats_1 extends _i1.SmartFake implements _i2.OvertimeStats {
  _FakeOvertimeStats_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OvertimeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOvertimeRepository extends _i1.Mock
    implements _i3.OvertimeRepository {
  @override
  _i4.Future<List<_i2.OvertimeRequest>> getOvertimeRequests(
          String? employeeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOvertimeRequests,
          [employeeId],
        ),
        returnValue: _i4.Future<List<_i2.OvertimeRequest>>.value(
            <_i2.OvertimeRequest>[]),
        returnValueForMissingStub: _i4.Future<List<_i2.OvertimeRequest>>.value(
            <_i2.OvertimeRequest>[]),
      ) as _i4.Future<List<_i2.OvertimeRequest>>);

  @override
  _i4.Future<_i2.OvertimeRequest> createOvertimeRequest({
    required String? employeeId,
    required DateTime? date,
    required _i5.TimeOfDay? startTime,
    required _i5.TimeOfDay? endTime,
    required _i2.OvertimeType? type,
    required String? reason,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOvertimeRequest,
          [],
          {
            #employeeId: employeeId,
            #date: date,
            #startTime: startTime,
            #endTime: endTime,
            #type: type,
            #reason: reason,
          },
        ),
        returnValue:
            _i4.Future<_i2.OvertimeRequest>.value(_FakeOvertimeRequest_0(
          this,
          Invocation.method(
            #createOvertimeRequest,
            [],
            {
              #employeeId: employeeId,
              #date: date,
              #startTime: startTime,
              #endTime: endTime,
              #type: type,
              #reason: reason,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.OvertimeRequest>.value(_FakeOvertimeRequest_0(
          this,
          Invocation.method(
            #createOvertimeRequest,
            [],
            {
              #employeeId: employeeId,
              #date: date,
              #startTime: startTime,
              #endTime: endTime,
              #type: type,
              #reason: reason,
            },
          ),
        )),
      ) as _i4.Future<_i2.OvertimeRequest>);

  @override
  _i4.Future<_i2.OvertimeRequest> updateOvertimeRequest({
    required String? requestId,
    required _i2.OvertimeStatus? status,
    String? approverNote,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOvertimeRequest,
          [],
          {
            #requestId: requestId,
            #status: status,
            #approverNote: approverNote,
          },
        ),
        returnValue:
            _i4.Future<_i2.OvertimeRequest>.value(_FakeOvertimeRequest_0(
          this,
          Invocation.method(
            #updateOvertimeRequest,
            [],
            {
              #requestId: requestId,
              #status: status,
              #approverNote: approverNote,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.OvertimeRequest>.value(_FakeOvertimeRequest_0(
          this,
          Invocation.method(
            #updateOvertimeRequest,
            [],
            {
              #requestId: requestId,
              #status: status,
              #approverNote: approverNote,
            },
          ),
        )),
      ) as _i4.Future<_i2.OvertimeRequest>);

  @override
  _i4.Future<_i2.OvertimeRequest> cancelOvertimeRequest(String? requestId) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelOvertimeRequest,
          [requestId],
        ),
        returnValue:
            _i4.Future<_i2.OvertimeRequest>.value(_FakeOvertimeRequest_0(
          this,
          Invocation.method(
            #cancelOvertimeRequest,
            [requestId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.OvertimeRequest>.value(_FakeOvertimeRequest_0(
          this,
          Invocation.method(
            #cancelOvertimeRequest,
            [requestId],
          ),
        )),
      ) as _i4.Future<_i2.OvertimeRequest>);

  @override
  _i4.Future<void> deleteOvertimeRequest(String? requestId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteOvertimeRequest,
          [requestId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.OvertimeRequest>> getPendingOvertimeRequests({
    required String? employeeId,
    bool? isApprover = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingOvertimeRequests,
          [],
          {
            #employeeId: employeeId,
            #isApprover: isApprover,
          },
        ),
        returnValue: _i4.Future<List<_i2.OvertimeRequest>>.value(
            <_i2.OvertimeRequest>[]),
        returnValueForMissingStub: _i4.Future<List<_i2.OvertimeRequest>>.value(
            <_i2.OvertimeRequest>[]),
      ) as _i4.Future<List<_i2.OvertimeRequest>>);

  @override
  _i4.Future<_i2.OvertimeStats> getOvertimeStats({
    required String? employeeId,
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOvertimeStats,
          [],
          {
            #employeeId: employeeId,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue: _i4.Future<_i2.OvertimeStats>.value(_FakeOvertimeStats_1(
          this,
          Invocation.method(
            #getOvertimeStats,
            [],
            {
              #employeeId: employeeId,
              #startDate: startDate,
              #endDate: endDate,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.OvertimeStats>.value(_FakeOvertimeStats_1(
          this,
          Invocation.method(
            #getOvertimeStats,
            [],
            {
              #employeeId: employeeId,
              #startDate: startDate,
              #endDate: endDate,
            },
          ),
        )),
      ) as _i4.Future<_i2.OvertimeStats>);
}
