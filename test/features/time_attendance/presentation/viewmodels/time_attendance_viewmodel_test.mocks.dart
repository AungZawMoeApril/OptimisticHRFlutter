// Mocks generated by Mockito 5.4.5 from annotations
// in h_r_optimistic_mobile/test/features/time_attendance/presentation/viewmodels/time_attendance_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:h_r_optimistic_mobile/core/error/failures.dart' as _i5;
import 'package:h_r_optimistic_mobile/features/time_attendance/domain/entities/time_attendance_record.dart'
    as _i6;
import 'package:h_r_optimistic_mobile/features/time_attendance/domain/repositories/time_attendance_repository.dart'
    as _i3;
import 'package:h_r_optimistic_mobile/features/time_attendance/domain/usecases/get_time_attendance_list.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TimeAttendanceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimeAttendanceRepository extends _i1.Mock
    implements _i3.TimeAttendanceRepository {
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.TimeAttendanceRecord>>>
      getTimeAttendanceList(_i7.TimeAttendanceParams? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #getTimeAttendanceList,
              [params],
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i6.TimeAttendanceRecord>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.TimeAttendanceRecord>>(
              this,
              Invocation.method(
                #getTimeAttendanceList,
                [params],
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i6.TimeAttendanceRecord>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.TimeAttendanceRecord>>(
              this,
              Invocation.method(
                #getTimeAttendanceList,
                [params],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i6.TimeAttendanceRecord>>>);
}
